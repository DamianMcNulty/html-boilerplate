// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.

@mixin make-grid-columns($i: 1, $list: ".col-#{$i}, .col-#{$i}p, .col-#{$i}t, .col-#{$i}d, .col-#{$i}w") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .col-#{$i}, .col-#{$i}p, .col-#{$i}t, .col-#{$i}d, .col-#{$i}w";
  }
  #{$list} {
    position: relative;
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-left:  ($grid-gutter-width / 2);
    padding-right: ($grid-gutter-width / 2);
  }
}


@mixin float-grid-columns($class, $i: 1, $list: ".col-#{$i}#{$class}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .col-#{$i}#{$class}";
  }
  #{$list} {
    float: left;
  }
}


@mixin calc-grid-column($index, $class, $type) {
  @if ($type == width) and ($index > 0) {
    .col-#{$index}#{$class} {
      width: percentage(($index / $grid-columns));
    }
  }
  @if ($type == push) and ($index > 0) {
    .push-#{$index}#{$class} {
      left: percentage(($index / $grid-columns));
    }
  }
  @if ($type == push) and ($index == 0) {
    .push-0#{$class} {
      left: auto;
    }
  }
  @if ($type == pull) and ($index > 0) {
    .pull-#{$index}#{$class} {
      right: percentage(($index / $grid-columns));
    }
  }
  @if ($type == pull) and ($index == 0) {
    .pull-0#{$class} {
      right: auto;
    }
  }
  @if ($type == pre) {
    .pre-#{$index}#{$class} {
      margin-left: percentage(($index / $grid-columns));
    }
  }
  @if ($type == squish) {
    .squish-#{$index}#{$class} {
      margin-left: percentage(($index / $grid-columns));
      margin-right: percentage(($index / $grid-columns));
    }
  }
}


@mixin loop-grid-columns($columns, $class, $type) {
  @for $i from 0 through $columns {
    @include calc-grid-column($i, $class, $type);
  }
}


// Create grid for specific class
@mixin make-grid($class: "") {
  @include float-grid-columns($class);
  @include loop-grid-columns($grid-columns, $class, width);
  @include loop-grid-columns($grid-columns, $class, pull);
  @include loop-grid-columns($grid-columns, $class, push);
  @include loop-grid-columns($grid-columns, $class, pre);
  @include loop-grid-columns($grid-columns, $class, squish);
}
